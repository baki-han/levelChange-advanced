{"version":3,"sources":["components/Header.jsx","components/Info.jsx","components/Panel.jsx","Player.js","Levels.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","firstIntput","setFirstInput","secondInput","setSecondInput","titleInput","setTitleInput","className","type","onChange","event","val","target","value","placeholder","onClick","alert","addPlayer","data-toggle","data-target","aria-expanded","aria-controls","id","delList","map","el","key","first","last","Info","index","delPlayer","levelUpDown","length","disabled","Panel","levels","i","uuidv4","list","elem","level","delFromCard","Player","this","selected","playerArray","App","title","setTitle","players","setList","deletedList","setDeletedList","newLevel","find","toLowerCase","undefined","a","newPlayer","newList","filterList","filter","newDelList","itemToDelete","unshift","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31728c68.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction Header(props){\r\n\r\n  const [firstIntput, setFirstInput] = useState(\"\");\r\n  const [secondInput, setSecondInput] = useState(\"\");\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n\r\n\r\n //TODO: Handle all inputs\r\n  const firstHandler = (event) =>{\r\n       const val = event.target.value;\r\n        setFirstInput(val);\r\n  }\r\n\r\n  const secondHandler = (event) =>{\r\n       const val = event.target.value;\r\n       setSecondInput(val);  \r\n  }\r\n\r\n  const titleHandler = (event) =>{\r\n       const val = event.target.value;\r\n       setTitleInput(val);\r\n        \r\n  }\r\n\r\n\r\n  //TODO: hadle button click;\r\n  const addButtonHandler = () =>{\r\n\r\n   if(firstIntput === \"\"){alert('first name cant be empty')}\r\n   else if(secondInput === \"\"){alert('last name cant be empty')}\r\n   else if(titleInput === \"\"){alert(\"level cant be emtpy\")}\r\n   else{\r\n       props.addPlayer(firstIntput, secondInput, titleInput);\r\n       setTitleInput(\"\");\r\n       setFirstInput(\"\");\r\n       setSecondInput(\"\");\r\n   }\r\n }\r\n\r\n\r\n    return (<div className=\"header\">\r\n     <h2>{\"<<< Title >>>\"}</h2>\r\n        <div className=\"input-header\">\r\n        <input className=\"input-class\" type=\"text\" \r\n                     onChange={firstHandler}  placeholder=\"first\" value={firstIntput}/>\r\n        <input className=\"input-class\" type=\"text\" \r\n               onChange={secondHandler} placeholder=\"last\" value={secondInput}/>\r\n        <input className=\"input-class\" type=\"text\" \r\n               onChange={titleHandler} placeholder=\"level\" value={titleInput}/>\r\n               \r\n               </div>\r\n\r\n                \r\n               <button onClick={addButtonHandler} className=\"btn btn-secondary add-new\">add player</button>\r\n              \r\n               <button className=\"btn-warning trash-bin trash-bin\" type=\"button\" \r\n                       data-toggle=\"collapse\" data-target=\"#collapseExample\" \r\n                       aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                       <i className=\"fa fa-trash\"></i>recycle</button>\r\n                \r\n\r\n                     <div className=\"collapse col1\" id=\"collapseExample\">\r\n                     <div className=\"card card-body collapse-div\">\r\n\r\n                      <h4>Deleted items:</h4> \r\n                      <hr/>\r\n                      <ul>\r\n                        {props.delList.map(el =><li key={el.id}>\r\n                            <label className=\"player\">{el.first}&nbsp;&nbsp;{el.last}</label> \r\n                        </li>)}\r\n                        </ul>\r\n                    </div>\r\n             </div>  \r\n             </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nfunction Info(props){\r\n\r\n    const {first, last, id, index, delPlayer, levelUpDown, length} = props;\r\n\r\n  \r\n    return (\r\n        <li>\r\n        <div className=\"cell\">\r\n           \r\n        <button onClick={()=> delPlayer(id)} className=\"btn btn-secondary  del-player\" ><i className=\"fa fa-trash\"></i></button>\r\n\r\n           <label className=\"player\">{first}&nbsp;&nbsp;{last}</label> \r\n\r\n           <div className=\"controllers\">\r\n\r\n                <button onClick={()=> levelUpDown(index, id, -1)} type=\"button\" className=\"btn btn-sm btn-info bt\" \r\n                        disabled={index === 0}>&laquo;</button>\r\n                <button onClick={()=> levelUpDown(index, id, 1)} type=\"button\" className=\"btn btn-sm  btn-info bt\"\r\n                        disabled={index === length-1}>&raquo;</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <hr/>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Info;","import React  from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Info from './Info';\r\n\r\n\r\n\r\nfunction Panel(props){\r\n\r\n   const levels = props.levels;\r\n\r\n    return (<div className=\"panel\">\r\n           <div className=\"container\">\r\n             \r\n           <div className=\"row text-center row-panel\">\r\n              {levels.map((el, i) => \r\n              \r\n            <div className=\"card-box\" key={uuidv4()}>\r\n            <div className=\"card box-shadow\">\r\n            <div className=\"card-header\">\r\n            <h4 className=\"my-0 font-weight-normal\">{el}</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n           \r\n            {props.list.map(elem =>{\r\n                if(elem.level === el){\r\n                  return   <ul className=\"list-unstyled mt-3 mb-4\" key={elem.id}><Info \r\n                      index={i}\r\n                      first={elem.first}\r\n                      last={elem.last}\r\n                      id={elem.id}\r\n                      level={elem.level}\r\n                      delPlayer={props.delFromCard}\r\n                      levelUpDown={props.levelUpDown}\r\n                      length={levels.length}\r\n                  /></ul>\r\n                }\r\n                else{return \"\"}\r\n            })}\r\n       \r\n            </div>\r\n            </div>\r\n            </div>\r\n              \r\n              )}\r\n        \r\n        \r\n          </div>\r\n\r\n           </div>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Panel;\r\n\r\n\r\n// {initCards.map(el => <Card title={el} \r\n           \r\n//     players={players}\r\n//     delFromCard={props.delFromCard}\r\n//     />)}","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Player{\r\n    constructor(first, last, level){\r\n        this.first = first;\r\n        this.last = last;\r\n        this.level = level;\r\n        this.id = uuidv4();\r\n        this.selected = false;\r\n    }  \r\n}\r\n\r\nconst playerArray =[\r\n    new Player('Jake', 'Shields', \"Novice\"),\r\n    new Player('Ronda', 'Rousey', \"Intermediate\"),\r\n    new Player('Mark', 'Zuckerberg', \"Novice\"),\r\n    new Player('Indiana', 'Johnes', \"Novice\"),\r\n    new Player('Steven', 'Sigal', \"Beginner\"),\r\n    new Player('Jim', 'Helpert', \"Novice\"),\r\n    new Player('Dwight', 'Shrute', \"Expert\"),\r\n    new Player('Khabib', 'Nurmagomedov', \"Expert\"),\r\n    new Player('Masutatsu', 'Oyama', \"Beginner\"),\r\n    new Player('Fedor', 'Emelianenko', \"Beginner\"),\r\n    new Player('Jose', 'Aldo', \"Beginner\"),\r\n    new Player('Michael', 'Scott', \"Master\"),\r\n    new Player('Tyron', 'Woudley', \"Master\"),\r\n ];\r\n\r\nexport  {playerArray};\r\n\r\n\r\n\r\n\r\n\r\n","const levels = [\"Novice\", \"Beginner\", \"Intermediate\", \"Expert\",\"Master\"];\r\n\r\nexport default levels;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Panel from './components/Panel';\nimport {playerArray as players} from './Player';\nimport levels from './Levels';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nfunction App() {\n  const [title, setTitle] = useState(levels);\n  const [list, setList] = useState(players);\n  const [deletedList, setDeletedList] = useState([]);\n\n  //TODO: delete from card\n  const delFromCard = (id) =>{\n   const filterList = list.filter(elem =>  elem.id !== id);\n   const newDelList = [...deletedList];\n   const itemToDelete = list.find(el => el.id === id);\n   newDelList.unshift(itemToDelete);\n   setDeletedList(newDelList);\n   setList(filterList);\n  }\n  \n  //TODO: level up ;\n  const levelUpDown =(index, id, val)=>{\n    const a = list.map(el =>{\n      if(el.id === id){return {...el, level: title[index + val]}}\n      else{return el}\n    });\n    setList(a);\n  }\n\n\n  //TODO: add new player code;\n  const addPlayer = (first, last, level) =>{\n     let newLevel = title.find(el => {\n       if(el.toLowerCase() === level.toLowerCase()){ \n         return el;\n        }\n        return undefined;\n     });\n\n     if(newLevel === undefined){\n       newLevel = level\n       const a = [...title, newLevel];\n       setTitle(a);\n     }\n\n     const newPlayer = {first: first, last: last, level: newLevel, id: uuidv4(), selected: false};\n     const newList = [...list, newPlayer];\n     setList(newList);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header delList={deletedList}\n              addPlayer={addPlayer}\n      />\n      <hr />\n      <Panel levels={title}\n            list={list} \n            delFromCard={delFromCard}\n            levelUpDown={levelUpDown}\n            />\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}